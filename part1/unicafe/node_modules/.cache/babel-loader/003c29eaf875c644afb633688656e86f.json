{"ast":null,"code":"var _jsxFileName = \"G:\\\\WebDev Stuff\\\\Full-Stack-Open-course-made-by-the-University-of-Helsinki\\\\part1\\\\unicafe\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Header = props => {\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: props.course\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 11\n  }, this);\n};\n\n_c = Header;\n\nconst StatisticLine = props => {\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: props.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: [\" \", props.value, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 34\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = StatisticLine;\n\nconst Statistics = props => {\n  if (props.displayStats.stats[0].data === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No feedback given\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(StatisticLine, {\n          text: \"Good: \",\n          value: props.displayData.buttons[0].data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n          text: \"Neutral: \",\n          value: props.displayData.buttons[1].data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n          text: \"Bad: \",\n          value: props.displayData.buttons[2].data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n          text: \"All: \",\n          value: props.displayStats.stats[0].data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n          text: \"Average: \",\n          value: props.displayStats.stats[1].data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n          text: \"Positive: \",\n          value: props.displayStats.stats[2].data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n\n_c3 = Statistics;\n\nconst Button = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: props.hGoodClick,\n      children: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: props.hNeutralClick,\n      children: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: props.hBadClick,\n      children: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n_c4 = Button;\n\nconst App = () => {\n  _s();\n\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const clickData = {\n    buttons: [{\n      name: 'Good:',\n      data: good\n    }, {\n      name: 'Neutral: ',\n      data: neutral\n    }, {\n      name: 'Bad: ',\n      data: bad\n    }]\n  };\n  const statData = {\n    stats: [{\n      name: 'All: ',\n      data: good + neutral + bad\n    }, {\n      name: 'Average: ',\n      data: (good + -1 * bad) / (good + neutral + bad)\n    }, {\n      name: 'Positive: ',\n      data: good / (good + neutral + bad) + ' %'\n    }]\n  };\n\n  const handleGoodClick = () => {\n    const newGood = good + 1;\n    setGood(newGood);\n  };\n\n  const handleNeutralClick = () => {\n    const newNeutral = neutral + 1;\n    setNeutral(newNeutral);\n  };\n\n  const handleBadClick = () => {\n    const newBad = bad + 1;\n    setBad(newBad);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      course: \"get feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      hGoodClick: () => handleGoodClick(),\n      hNeutralClick: () => handleNeutralClick(),\n      hBadClick: () => handleBadClick()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      course: \"statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      displayData: clickData,\n      displayStats: statData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n\n_c5 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Header\");\n$RefreshReg$(_c2, \"StatisticLine\");\n$RefreshReg$(_c3, \"Statistics\");\n$RefreshReg$(_c4, \"Button\");\n$RefreshReg$(_c5, \"App\");","map":{"version":3,"sources":["G:/WebDev Stuff/Full-Stack-Open-course-made-by-the-University-of-Helsinki/part1/unicafe/src/App.js"],"names":["React","useState","Header","props","course","StatisticLine","text","value","Statistics","displayStats","stats","data","displayData","buttons","Button","hGoodClick","hNeutralClick","hBadClick","App","good","setGood","neutral","setNeutral","bad","setBad","clickData","name","statData","handleGoodClick","newGood","handleNeutralClick","newNeutral","handleBadClick","newBad"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\n\nconst Header = (props) => {\n\n  return (<h1>{props.course}</h1>)\n}\n\nconst StatisticLine = (props) => {\n    return(\n        <tr>\n            <td>{props.text}</td><td> {props.value} </td>\n        </tr>\n    )\n}\n\n\nconst Statistics = (props) => {\n    if(props.displayStats.stats[0].data===0) {\n        return(<p>No feedback given</p>)\n    }\n    return(\n        <div>\n            <table>\n                <tbody>\n                        <StatisticLine text=\"Good: \" value={props.displayData.buttons[0].data}/>\n                        <StatisticLine text=\"Neutral: \" value={props.displayData.buttons[1].data}/>\n                        <StatisticLine text=\"Bad: \" value={props.displayData.buttons[2].data}/>\n\n                        <StatisticLine text=\"All: \" value={props.displayStats.stats[0].data}/>\n                        <StatisticLine text=\"Average: \" value={props.displayStats.stats[1].data}/>\n                        <StatisticLine text=\"Positive: \" value={props.displayStats.stats[2].data}/>\n                </tbody>\n            </table>\n        </div>\n    )\n}\n\nconst Button = (props) => {\n    return(\n        <div>\n            <button onClick={props.hGoodClick}>good</button>\n            <button onClick={props.hNeutralClick}>neutral</button>\n            <button onClick={props.hBadClick}>bad</button>\n        </div>\n    )\n}\n\nconst App = () => {\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  const clickData = {\n      buttons:[\n          {\n              name:'Good:',\n              data: good\n          },\n          {\n              name:'Neutral: ',\n              data: neutral\n          },\n          {\n              name:'Bad: ',\n              data: bad\n          }\n      ]\n  }\n  const statData = {\n      stats:[\n          {\n              name:'All: ',\n              data: good+neutral+bad\n          },\n          {\n              name:'Average: ',\n              data: (good+(-1*bad))/(good+neutral+bad)\n          },\n          {\n              name:'Positive: ',\n              data:( good/(good+neutral+bad) + ' %')\n          }\n      ]\n  }\n\n  const handleGoodClick = () => {\n    const newGood = good + 1\n    setGood(newGood)\n  }\n\n  const handleNeutralClick = () => {\n    const newNeutral = neutral + 1\n    setNeutral(newNeutral)\n  }\n\n  const handleBadClick = () => {\n    const newBad = bad + 1\n    setBad(newBad)\n  }\n\n  return (\n    <div>\n        <Header course={\"get feedback\"} />\n\n        <Button hGoodClick={() => handleGoodClick()} hNeutralClick={() => handleNeutralClick()} hBadClick={() => handleBadClick()}/>\n\n        <Header course={\"statistics\"} />\n\n        <Statistics displayData={clickData} displayStats={statData} />\n\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}